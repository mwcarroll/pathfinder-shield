/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { tapping-term-ms = <300>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_game {
            timeout-ms = <50>;
            key-positions = <0 5>;
            bindings = <&tog 0>;
        };
    };
};

/ {
    macros {
        PriorityLeft: PriorityLeft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 250>, <&kp LG(Z) &kp N9 &kp N1>;

            label = "PRIORITYLEFT";
        };

        PriorityCenter: PriorityCenter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 250>, <&kp LG(Z) &kp N9 &kp N2>;

            label = "PRIORITYCENTER";
        };

        PriorityRight: PriorityRight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 250>, <&kp LG(Z) &kp N9 &kp N3>;

            label = "PRIORITYRIGHT";
        };

        SplitLeft: SplitLeft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 250>, <&kp LG(Z) &kp N4 &kp N1>;

            label = "SPLITLEFT";
        };

        SplitRight: SplitRight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 250>, <&kp LG(Z) &kp N4 &kp N2>;

            label = "SPLITRIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                             &kp N6    &kp N7  &kp N8  &kp N9     &kp N0   &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E   &kp R      &kp T      &kp ESC                 &none     &kp Y   &kp U   &kp I      &kp O    &kp P      &kp BSLH
&kp LALT   &kp A   &kp S   &kp D   &kp F      &kp G      &kp GRAVE               &none     &kp H   &kp J   &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B      &kp LBKT                &kp RBKT  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH   &kp LGUI
                           &mo 1   &kp LCTRL  &lt 2 RET             &lt 1 SPACE  &kp BSPC  &mo 2
            >;
        };

        Macros {
            bindings = <
&none   &PriorityLeft  &PriorityCenter  &PriorityRight  &SplitLeft  &SplitRight                 &none    &none      &none  &none        &none                    &none
&trans  &none          &kp LC(W)        &none           &kp LC(R)   &kp LC(T)    &none          &none    &none      &none  &kp LC(F12)  &kp LA(LC(PAUSE_BREAK))  &none  &none
&trans  &kp LC(A)      &kp LC(S)        &none           &kp LC(F)   &kp LC(G)    &none          &none    &none      &none  &none        &none                    &none  &none
&trans  &kp LC(Z)      &kp LC(X)        &kp LC(C)       &kp LC(V)   &none        &none          &none    &kp LC(N)  &none  &none        &none                    &none  &trans
                                        &trans          &trans      &lt 3 ENTER         &trans  &kp DEL  &trans
            >;
        };

        FuncsArrows {
            bindings = <
&none   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                       &kp F6           &kp F7     &kp F8    &kp F9    &kp F10    &none
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &none               &kp PRINTSCREEN  &kp PG_UP  &kp HOME  &kp UP    &kp END    &none  &none
&trans  &none    &none    &none    &none    &none    &none               &kp CLCK         &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&trans  &none    &none    &none    &none    &none    &none               &none            &none      &none     &none     &none      &none  &none
                          &trans   &trans   &trans          &lt 3 SPACE  &kp DELETE       &trans
            >;
        };

        BoardFunctions {
            bindings = <
&none  &none         &none         &none         &none         &none                                 &none        &none   &none  &none  &none  &none
&none  &none         &none         &none         &none         &none         &bt BT_CLR_ALL          &bootloader  &none   &none  &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR              &none        &none   &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none         &none                   &none        &none   &none  &none  &none  &none  &to 4
                                   &trans        &trans        &trans                        &trans  &trans       &trans
            >;
        };

        Gaming {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                   &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS
&kp TAB    &none   &kp Q   &kp W     &kp E      &kp R      &kp T         &none   &none   &none   &none   &none   &none      &none
&kp LALT   &none   &kp A   &kp S     &kp D      &kp F      &kp G         &none   &none   &none   &none   &none   &none      &none
&kp LSHFT  &none   &kp Z   &kp X     &kp C      &kp V      &kp B         &none   &none   &none   &none   &none   &none      &to 0
                           &kp LALT  &kp LCTRL  &kp SPACE         &none  &none   &none
            >;
        };
    };
};
